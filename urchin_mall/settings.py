"""
Django settings for urchin_mall project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# if apps are all under 'apps' folder, here can save some trouble at import or INSTALLED_APPS, i.e. um_app instead of apps.um_app
# sys.path.insert(0, str(BASE_DIR))
# sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-p9gt%eo9&ckzx8$1epi0v2btui9%ug_tfp$=cn05n0z)qy8-ac"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "demoo",
    "um_cart",
    "um_comment",
    "um_commodity",
    "um_order",
    "um_user",
    "um_menu",
    "um_addr",
    'rest_framework',
    'corsheaders',
]

CORS_ALLOW_ALL_ORIGINS = True  # or CORS_ALLOWED_ORIGINS = ['http://localhost:5173']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # have to be in the first ones
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "urchin_mall.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "urchin_mall.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "urchin_mall",
#         "USER": "sqljohn",
#         "PASSWORD": "123",
#         "HOST": "127.0.0.1",
#         "PORT": "3306",
#         # "OPTIONS": {"charset": "utf8mb4"},
#         # "TEST": {"CHARSET": "utf8mb4"},
#         # "init_command": "SET sql_mode='STRICT_TRANS_TABLES'"
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = "static/"
# e.g. http://127.0.0.1:8000/static/excalibur.jpg
STATICFILES_DIRS = [
    #
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
# IMAGE_URL = "http://192.168.2.125:8000/static/product_images/"

REST_FRAMEWORK = {
    # global setting of token auth
    "DEFAULT_AUTHENTICATION_CLASSES": (
        # "utils.Token.JwtAuthentication",
        "utils.Token.JwtHeaderAuthentication",
    ),
    # "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
}

# ALIPAY_APPID = "2021000148636567"
KPR_APP = os.path.join(BASE_DIR, "um_pay/keys/private_app.txt")
KPU_ALI = os.path.join(BASE_DIR, "um_pay/keys/public_ali.txt")
#
# # async receiving url, post
# APP_NOTIFY_URL = "http://192.168.2.125:8000/alipay/return"
# # sync receiving url, e.i. page after payment settled, get
# APP_RETURN_URL = "http://192.168.2.125:8000/alipay/return"
#
ALI_DEBUG = True

CURRENT_ENV = "prod"
# CURRENT_ENV = os.getenv("CURRENT_ENV", "dev")
if CURRENT_ENV == "dev":
    from .settings_dev import *
elif CURRENT_ENV == "prod":
    from .settings_prod import *

